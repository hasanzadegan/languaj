angular.module('myApp').controller('teachController',
    function ($rootScope, $scope, $q, WordService, BaeService, StorageService, ArchiveService, TeachService, SoundService,
              $interval, $ocLazyLoad) {


        voiceId = $scope.current.selectedCourse.selectedLesson.selectedTopic.selectedTeach.voiceId;

        $scope.pointList = [];
        $scope.secondList = [];


        $scope.$on("teachChanged", function (event, teachId) {
            $scope.current.maxTime = $scope.current.selectedCourse.selectedLesson.selectedTopic.selectedTeach.duration;
            for (i = 0; i < Number($scope.current.maxTime); i++) {
                $scope.secondList[i] = {startTime: i};
            }

            TeachService.getTeachPointList(teachId).then(result => {
                $scope.pointList = result;

                for (point of $scope.pointList) {
                    $scope.secondList[point.startTime].teachPointId = point.teachPointId;
                }
                if (!$scope.current.selectedTime)
                    $scope.current.selectedTime = 0;
            })
            voiceId = $scope.current.selectedCourse.selectedLesson.selectedTopic.selectedTeach.voiceId;
        });
        $rootScope.$broadcast("teachChanged", $scope.current.selectedCourse.selectedLesson.selectedTopic.selectedTeach.teachId);

        var audio = angular.element(document.querySelector("#myAudio"));
        $scope.playCurrentSound = function () {
            audio[0].currentTime = $scope.current.selectedTime;
            if (audio[0].paused) {
                $scope.isPlaying = true;
                interval = $interval(function (data) {
                    if ($scope.current.maxTime < data)
                        $interval.cancel(interval);

                    var cTime = Math.ceil(audio[0].currentTime);

                    $scope.current.selectedTime = cTime;
                    var seconds = $scope.secondList.filter(function (second) {
                        return second.startTime===cTime;
                    })
                    $scope.loadFirstPoint(seconds[0]);
                    StorageService.setData($scope.current);
                }, 1000);
                audio[0].play();
            } else {
                $scope.isPlaying = false;
                $interval.cancel(interval);
                audio[0].pause();
            }
        };

        $scope.clickTeachPoint = function (point) {
            $scope.current.selectedTime = second.startTime;
            $scope.current.point = null;
            StorageService.setData($scope.current);
            $scope.loadFirstPoint(second);
        }

        $scope.loadFirstPoint = function (second) {
            if (second.teachPointId)
                $scope.selectTeachPoint(second.teachPointId);

            points = $scope.secondList.filter(function (teachSecond) {
                return teachSecond.teachPointId>0 && teachSecond.startTime<=second.startTime;
            })

            if(points.length>0)
                $scope.selectTeachPoint(points[points.length-1].teachPointId)
        }

        $scope.selectTeachPoint = function (teachPointId) {
            var pointList = $scope.pointList.filter(function (point) {
                return point.teachPointId === teachPointId;
            });
            $scope.current.point = pointList[0]
        }

        $scope.addDeletePoint = function ($event, item) {
            if (item.teachPointId > 0) {
                if ($event.ctrlKey) {
                    TeachService.deleteTeachPoint(item.teachPointId).then(result => {
                        $scope.secondList[item.startTime].teachPointId = null;
                        // $rootScope.$broadcast("teachChanged", $scope.current.selectedCourse.selectedLesson.selectedTopic.selectedTeach.teachId);
                    })
                }
            } else {
                var newPoint = {
                    teachId: $scope.current.selectedCourse.selectedLesson.selectedTopic.selectedTeach.teachId,
                    startTime: item.startTime
                };
                TeachService.addTeachPoint(newPoint).then(result => {
                    $rootScope.$broadcast("teachChanged", $scope.current.selectedCourse.selectedLesson.selectedTopic.selectedTeach.teachId);
                    $scope.selectTeachPoint(result.insertId);
                })
            }
        }

        $scope.updatePoint = function () {
            TeachService.updateTeachPoint($scope.current.point).then(result => {
            })
        }


        $scope.onReady = function () {

        };

        $scope.uplaodFiles = function () {
            document.getElementById("fileTeachSound").click()
        }


        $scope.deleteSound = function () {
            teach = $scope.current.selectedCourse.selectedLesson.selectedTopic.selectedTeach;
            teach.voiceId = null;
            teach.duration = null;
            TeachService.updateTeach(teach).then(teachResult => {
                $rootScope.$broadcast("teachChanged", teach.teachId);
            })
        }


        $scope.getTheFiles = function ($files) {
            var f = $files[0];
            var reader = new FileReader();
            reader.onload = (function (theFile) {
                return function (e) {
                    var binaryData = e.target.result;
                    var base64String = window.btoa(binaryData);
                    docData = "data:" + f.type + ";base64," + base64String;
                    fileData = {docData: docData}
                    ArchiveService.saveDoc(fileData).then(result => {

                        teach = $scope.current.selectedCourse.selectedLesson.selectedTopic.selectedTeach;
                        teach.voiceId = result.insertId;

                        SoundService.loadSoundDuration(teach.voiceId).then(result => {
                            teach = $scope.current.selectedCourse.selectedLesson.selectedTopic.selectedTeach;
                            teach.duration = Math.ceil(result);
                            TeachService.updateTeach(teach).then(teachResult => {
                                // document.getElementById("fileTeachSound").value = ''
                                $rootScope.$broadcast("teachChanged", teach.teachId);
                            })
                        })

                        $scope.current.teachSoundId = result.insertId;
                    });
                };
            })(f);
            reader.readAsBinaryString(f);
        };
    })
